@page
@model Inventory.Pages.PurchaseOrders.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>PurchaseOrder</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PurchaseOrder.Date)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PurchaseOrder.Date)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PurchaseOrder.Vendor)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PurchaseOrder.Vendor != null ? model.PurchaseOrder.Vendor.Name : null)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PurchaseOrder.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PurchaseOrder.Status)
        </dd>
        @foreach (var item in Model.purchaseItems){
            <dt class="col-sm-2">
                @Html.DisplayNameFor(modelItem => item.Item)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(modelItem => item.Item != null ? item.Item.Name : null)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(modelItem => item.Quantity)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(modelItem => item.Quantity)
            </dd>
        }
    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.PurchaseOrder?.PurchaseID">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>